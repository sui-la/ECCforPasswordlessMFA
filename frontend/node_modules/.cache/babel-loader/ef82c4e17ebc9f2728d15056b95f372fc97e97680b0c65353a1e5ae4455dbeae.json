{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\PycharmProjects\\\\ECCforPasswordlessMFA\\\\frontend\\\\src\\\\components\\\\Authentication.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport toast from 'react-hot-toast';\nimport { useAuth } from '../contexts/AuthContext';\nimport { cryptoService } from '../services/crypto';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  email: yup.string().email('Invalid email address').required('Email is required')\n}).required();\nconst Authentication = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSigning, setIsSigning] = useState(false);\n  const [challengeReceived, setChallengeReceived] = useState(false);\n  const [challengeId, setChallengeId] = useState('');\n  const [challengeNonce, setChallengeNonce] = useState('');\n  const navigate = useNavigate();\n  const {\n    login,\n    verifyChallenge\n  } = useAuth();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    }\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const onSubmit = async data => {\n    setIsLoading(true);\n    try {\n      toast.loading('Initiating authentication...', {\n        id: 'login'\n      });\n      const success = await login(data.email);\n      if (success) {\n        // Get challenge data from localStorage (set by auth context)\n        const storedChallengeId = localStorage.getItem('challengeId');\n        const storedNonce = localStorage.getItem('challengeNonce');\n        if (storedChallengeId && storedNonce) {\n          setChallengeId(storedChallengeId);\n          setChallengeNonce(storedNonce);\n          setChallengeReceived(true);\n          toast.success('Challenge received! Please sign with your private key.', {\n            id: 'login'\n          });\n        } else {\n          toast.error('Failed to receive challenge. Please try again.', {\n            id: 'login'\n          });\n        }\n      } else {\n        toast.error('User not found. Please check your email or register.', {\n          id: 'login'\n        });\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      toast.error('Authentication failed. Please try again.', {\n        id: 'login'\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  const handleSignChallenge = async () => {\n    setIsSigning(true);\n    try {\n      toast.loading('Signing challenge...', {\n        id: 'sign'\n      });\n\n      // Get private key from localStorage\n      const privateKeyPem = localStorage.getItem('privateKey');\n      if (!privateKeyPem) {\n        toast.error('Private key not found. Please register again.', {\n          id: 'sign'\n        });\n        return;\n      }\n\n      // Sign the challenge\n      const signature = await cryptoService.signChallenge(privateKeyPem, challengeNonce);\n      toast.success('Challenge signed!', {\n        id: 'sign'\n      });\n      toast.loading('Verifying signature...', {\n        id: 'verify'\n      });\n\n      // Verify the signature\n      const success = await verifyChallenge(challengeId, signature);\n      if (success) {\n        toast.success('Authentication successful!', {\n          id: 'verify'\n        });\n        navigate('/dashboard');\n      } else {\n        toast.error('Signature verification failed. Please try again.', {\n          id: 'verify'\n        });\n      }\n    } catch (error) {\n      console.error('Signing error:', error);\n      toast.error('Failed to sign challenge. Please try again.', {\n        id: 'sign'\n      });\n    } finally {\n      setIsSigning(false);\n    }\n  };\n  const handleBackToEmail = () => {\n    setChallengeReceived(false);\n    setChallengeId('');\n    setChallengeNonce('');\n    localStorage.removeItem('challengeId');\n    localStorage.removeItem('challengeNonce');\n  };\n  if (challengeReceived) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"auth-title\",\n          children: \"Sign Challenge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"auth-subtitle\",\n          children: \"Use your private key to sign the authentication challenge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"challenge-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Challenge received from server. Click the button below to sign it with your private key.\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"challenge-details\",\n            children: /*#__PURE__*/_jsxDEV(\"small\", {\n              children: [\"Challenge ID: \", challengeId.substring(0, 8), \"...\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleSignChallenge,\n          className: \"btn btn-primary\",\n          disabled: isSigning,\n          children: isSigning ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"loading-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 17\n            }, this), \"Signing Challenge...\"]\n          }, void 0, true) : 'Sign Challenge'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleBackToEmail,\n          className: \"btn btn-secondary\",\n          disabled: isSigning,\n          children: \"Back to Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"security-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"What's happening:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2713 Server sent a unique challenge\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2713 Your device will sign it with your private key\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2713 Only you can create this signature\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              children: \"\\u2713 Server verifies the signature with your public key\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"auth-title\",\n        children: \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"auth-subtitle\",\n        children: \"Enter your email to receive an authentication challenge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"form-label\",\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"email\",\n            className: `form-input ${errors.email ? 'error' : ''}`,\n            placeholder: \"Enter your email\",\n            ...register('email')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 13\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-message\",\n            children: errors.email.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          disabled: isLoading,\n          children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"loading-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this), \"Requesting Challenge...\"]\n          }, void 0, true) : 'Request Challenge'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-footer\",\n        children: [\"Don't have an account?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          className: \"auth-link\",\n          children: \"Create one\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"security-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"How it works:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2713 Enter your email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2713 Server sends a unique challenge\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2713 Your device signs it with your private key\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2713 Server verifies your identity\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 210,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 165,\n    columnNumber: 5\n  }, this);\n};\n_s(Authentication, \"fXCnBZ4MLJLtdUd0YqHiDZiypNo=\", false, function () {\n  return [useNavigate, useAuth, useForm];\n});\n_c = Authentication;\nexport default Authentication;\nvar _c;\n$RefreshReg$(_c, \"Authentication\");","map":{"version":3,"names":["React","useState","Link","useNavigate","useForm","yupResolver","yup","toast","useAuth","cryptoService","jsxDEV","_jsxDEV","Fragment","_Fragment","schema","object","email","string","required","Authentication","_s","isLoading","setIsLoading","isSigning","setIsSigning","challengeReceived","setChallengeReceived","challengeId","setChallengeId","challengeNonce","setChallengeNonce","navigate","login","verifyChallenge","register","handleSubmit","formState","errors","resolver","onSubmit","data","loading","id","success","storedChallengeId","localStorage","getItem","storedNonce","error","console","handleSignChallenge","privateKeyPem","signature","signChallenge","handleBackToEmail","removeItem","className","children","fileName","_jsxFileName","lineNumber","columnNumber","substring","onClick","disabled","htmlFor","type","placeholder","message","to","_c","$RefreshReg$"],"sources":["C:/Users/User/PycharmProjects/ECCforPasswordlessMFA/frontend/src/components/Authentication.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport toast from 'react-hot-toast';\nimport { useAuth } from '../contexts/AuthContext';\nimport { cryptoService } from '../services/crypto';\n\ninterface LoginForm {\n  email: string;\n}\n\nconst schema = yup.object({\n  email: yup.string().email('Invalid email address').required('Email is required'),\n}).required();\n\nconst Authentication: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isSigning, setIsSigning] = useState(false);\n  const [challengeReceived, setChallengeReceived] = useState(false);\n  const [challengeId, setChallengeId] = useState<string>('');\n  const [challengeNonce, setChallengeNonce] = useState<string>('');\n  const navigate = useNavigate();\n  const { login, verifyChallenge } = useAuth();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<LoginForm>({\n    resolver: yupResolver(schema),\n  });\n\n  const onSubmit = async (data: LoginForm) => {\n    setIsLoading(true);\n\n    try {\n      toast.loading('Initiating authentication...', { id: 'login' });\n\n      const success = await login(data.email);\n\n      if (success) {\n        // Get challenge data from localStorage (set by auth context)\n        const storedChallengeId = localStorage.getItem('challengeId');\n        const storedNonce = localStorage.getItem('challengeNonce');\n\n        if (storedChallengeId && storedNonce) {\n          setChallengeId(storedChallengeId);\n          setChallengeNonce(storedNonce);\n          setChallengeReceived(true);\n          toast.success('Challenge received! Please sign with your private key.', { id: 'login' });\n        } else {\n          toast.error('Failed to receive challenge. Please try again.', { id: 'login' });\n        }\n      } else {\n        toast.error('User not found. Please check your email or register.', { id: 'login' });\n      }\n    } catch (error) {\n      console.error('Login error:', error);\n      toast.error('Authentication failed. Please try again.', { id: 'login' });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSignChallenge = async () => {\n    setIsSigning(true);\n\n    try {\n      toast.loading('Signing challenge...', { id: 'sign' });\n\n      // Get private key from localStorage\n      const privateKeyPem = localStorage.getItem('privateKey');\n      if (!privateKeyPem) {\n        toast.error('Private key not found. Please register again.', { id: 'sign' });\n        return;\n      }\n\n      // Sign the challenge\n      const signature = await cryptoService.signChallenge(privateKeyPem, challengeNonce);\n\n      toast.success('Challenge signed!', { id: 'sign' });\n      toast.loading('Verifying signature...', { id: 'verify' });\n\n      // Verify the signature\n      const success = await verifyChallenge(challengeId, signature);\n\n      if (success) {\n        toast.success('Authentication successful!', { id: 'verify' });\n        navigate('/dashboard');\n      } else {\n        toast.error('Signature verification failed. Please try again.', { id: 'verify' });\n      }\n    } catch (error) {\n      console.error('Signing error:', error);\n      toast.error('Failed to sign challenge. Please try again.', { id: 'sign' });\n    } finally {\n      setIsSigning(false);\n    }\n  };\n\n  const handleBackToEmail = () => {\n    setChallengeReceived(false);\n    setChallengeId('');\n    setChallengeNonce('');\n    localStorage.removeItem('challengeId');\n    localStorage.removeItem('challengeNonce');\n  };\n\n  if (challengeReceived) {\n    return (\n      <div className=\"auth-container\">\n        <div className=\"auth-card\">\n          <h1 className=\"auth-title\">Sign Challenge</h1>\n          <p className=\"auth-subtitle\">\n            Use your private key to sign the authentication challenge\n          </p>\n\n          <div className=\"challenge-info\">\n            <p>Challenge received from server. Click the button below to sign it with your private key.</p>\n            <div className=\"challenge-details\">\n              <small>Challenge ID: {challengeId.substring(0, 8)}...</small>\n            </div>\n          </div>\n\n          <button\n            onClick={handleSignChallenge}\n            className=\"btn btn-primary\"\n            disabled={isSigning}\n          >\n            {isSigning ? (\n              <>\n                <span className=\"loading-spinner\"></span>\n                Signing Challenge...\n              </>\n            ) : (\n              'Sign Challenge'\n            )}\n          </button>\n\n          <button\n            onClick={handleBackToEmail}\n            className=\"btn btn-secondary\"\n            disabled={isSigning}\n          >\n            Back to Email\n          </button>\n\n          <div className=\"security-info\">\n            <h3>What's happening:</h3>\n            <ul>\n              <li>✓ Server sent a unique challenge</li>\n              <li>✓ Your device will sign it with your private key</li>\n              <li>✓ Only you can create this signature</li>\n              <li>✓ Server verifies the signature with your public key</li>\n            </ul>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"auth-container\">\n      <div className=\"auth-card\">\n        <h1 className=\"auth-title\">Sign In</h1>\n        <p className=\"auth-subtitle\">\n          Enter your email to receive an authentication challenge\n        </p>\n\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\" className=\"form-label\">\n              Email Address\n            </label>\n            <input\n              id=\"email\"\n              type=\"email\"\n              className={`form-input ${errors.email ? 'error' : ''}`}\n              placeholder=\"Enter your email\"\n              {...register('email')}\n            />\n            {errors.email && <span className=\"error-message\">{errors.email.message}</span>}\n          </div>\n\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            disabled={isLoading}\n          >\n            {isLoading ? (\n              <>\n                <span className=\"loading-spinner\"></span>\n                Requesting Challenge...\n              </>\n            ) : (\n              'Request Challenge'\n            )}\n          </button>\n        </form>\n\n        <div className=\"auth-footer\">\n          Don't have an account?{' '}\n          <Link to=\"/register\" className=\"auth-link\">\n            Create one\n          </Link>\n        </div>\n\n        <div className=\"security-info\">\n          <h3>How it works:</h3>\n          <ul>\n            <li>✓ Enter your email address</li>\n            <li>✓ Server sends a unique challenge</li>\n            <li>✓ Your device signs it with your private key</li>\n            <li>✓ Server verifies your identity</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Authentication; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}