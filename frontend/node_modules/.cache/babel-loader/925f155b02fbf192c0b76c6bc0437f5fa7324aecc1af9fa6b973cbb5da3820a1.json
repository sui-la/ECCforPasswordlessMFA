{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\PycharmProjects\\\\ECCforPasswordlessMFA\\\\frontend\\\\src\\\\components\\\\Registration.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport toast from 'react-hot-toast';\nimport { useAuth } from '../contexts/AuthContext';\nimport { cryptoService } from '../services/crypto';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst schema = yup.object({\n  email: yup.string().email('Invalid email address').required('Email is required'),\n  name: yup.string().min(2, 'Name must be at least 2 characters').required('Name is required')\n}).required();\nconst Registration = () => {\n  _s();\n  const [isLoading, setIsLoading] = useState(false);\n  const [isGeneratingKeys, setIsGeneratingKeys] = useState(false);\n  const [emailAvailable, setEmailAvailable] = useState(null);\n  const navigate = useNavigate();\n  const {\n    register: registerUser,\n    checkEmailAvailability\n  } = useAuth();\n  const {\n    register,\n    handleSubmit,\n    formState: {\n      errors\n    },\n    watch\n  } = useForm({\n    resolver: yupResolver(schema)\n  });\n  const watchedEmail = watch('email');\n\n  // Check email availability when email changes\n  React.useEffect(() => {\n    const checkEmail = async () => {\n      if (watchedEmail && watchedEmail.includes('@')) {\n        try {\n          const available = await checkEmailAvailability(watchedEmail);\n          setEmailAvailable(available);\n        } catch (error) {\n          setEmailAvailable(null);\n        }\n      } else {\n        setEmailAvailable(null);\n      }\n    };\n    const timeoutId = setTimeout(checkEmail, 500);\n    return () => clearTimeout(timeoutId);\n  }, [watchedEmail, checkEmailAvailability]);\n  const onSubmit = async data => {\n    if (emailAvailable === false) {\n      toast.error('Email is already registered');\n      return;\n    }\n    setIsLoading(true);\n    setIsGeneratingKeys(true);\n    try {\n      // Show key generation progress\n      toast.loading('Generating cryptographic keys...', {\n        id: 'keygen'\n      });\n\n      // Generate ECC key pair\n      const keyPair = await cryptoService.generateKeyPair();\n      toast.success('Keys generated successfully!', {\n        id: 'keygen'\n      });\n      toast.loading('Registering account...', {\n        id: 'register'\n      });\n\n      // Register user with public key\n      const success = await registerUser(data.email, data.name);\n      if (success) {\n        toast.success('Registration successful!', {\n          id: 'register'\n        });\n        toast.success('Your private key has been saved securely. Please keep it safe!', {\n          duration: 6000\n        });\n        navigate('/login');\n      } else {\n        toast.error('Registration failed. Please try again.', {\n          id: 'register'\n        });\n      }\n    } catch (error) {\n      console.error('Registration error:', error);\n      toast.error('Registration failed. Please try again.', {\n        id: 'register'\n      });\n      toast.error('Key generation failed. Please try again.', {\n        id: 'keygen'\n      });\n    } finally {\n      setIsLoading(false);\n      setIsGeneratingKeys(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"auth-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"auth-title\",\n        children: \"Create Account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"auth-subtitle\",\n        children: \"Register with ECC-based passwordless authentication\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"form-label\",\n            children: \"Email Address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"email\",\n            type: \"email\",\n            className: `form-input ${errors.email ? 'error' : ''}`,\n            placeholder: \"Enter your email\",\n            ...register('email')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), errors.email && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-message\",\n            children: errors.email.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 30\n          }, this), emailAvailable === true && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"success-message\",\n            children: \"\\u2713 Email is available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), emailAvailable === false && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-message\",\n            children: \"\\u2717 Email is already registered\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"name\",\n            className: \"form-label\",\n            children: \"Full Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            id: \"name\",\n            type: \"text\",\n            className: `form-input ${errors.name ? 'error' : ''}`,\n            placeholder: \"Enter your full name\",\n            ...register('name')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), errors.name && /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"error-message\",\n            children: errors.name.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"btn btn-primary\",\n          disabled: isLoading || emailAvailable === false,\n          children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"loading-spinner\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), isGeneratingKeys ? 'Generating Keys...' : 'Creating Account...']\n          }, void 0, true) : 'Create Account'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"auth-footer\",\n        children: [\"Already have an account?\", ' ', /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          className: \"auth-link\",\n          children: \"Sign in\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"security-info\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"How it works:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2713 Your device generates a unique cryptographic key pair\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2713 Only the public key is sent to our servers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2713 Your private key stays secure on your device\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"\\u2713 No passwords to remember or manage\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n};\n_s(Registration, \"2qDqJ3V5AMFfuptAkVRQd6A7ik8=\", false, function () {\n  return [useNavigate, useAuth, useForm];\n});\n_c = Registration;\nexport default Registration;\nvar _c;\n$RefreshReg$(_c, \"Registration\");","map":{"version":3,"names":["React","useState","Link","useNavigate","useForm","yupResolver","yup","toast","useAuth","cryptoService","jsxDEV","_jsxDEV","Fragment","_Fragment","schema","object","email","string","required","name","min","Registration","_s","isLoading","setIsLoading","isGeneratingKeys","setIsGeneratingKeys","emailAvailable","setEmailAvailable","navigate","register","registerUser","checkEmailAvailability","handleSubmit","formState","errors","watch","resolver","watchedEmail","useEffect","checkEmail","includes","available","error","timeoutId","setTimeout","clearTimeout","onSubmit","data","loading","id","keyPair","generateKeyPair","success","duration","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","placeholder","message","disabled","to","_c","$RefreshReg$"],"sources":["C:/Users/User/PycharmProjects/ECCforPasswordlessMFA/frontend/src/components/Registration.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport * as yup from 'yup';\nimport toast from 'react-hot-toast';\nimport { useAuth } from '../contexts/AuthContext';\nimport { cryptoService } from '../services/crypto';\n\ninterface RegistrationForm {\n  email: string;\n  name: string;\n}\n\nconst schema = yup.object({\n  email: yup.string().email('Invalid email address').required('Email is required'),\n  name: yup.string().min(2, 'Name must be at least 2 characters').required('Name is required'),\n}).required();\n\nconst Registration: React.FC = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isGeneratingKeys, setIsGeneratingKeys] = useState(false);\n  const [emailAvailable, setEmailAvailable] = useState<boolean | null>(null);\n  const navigate = useNavigate();\n  const { register: registerUser, checkEmailAvailability } = useAuth();\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n    watch,\n  } = useForm<RegistrationForm>({\n    resolver: yupResolver(schema),\n  });\n\n  const watchedEmail = watch('email');\n\n  // Check email availability when email changes\n  React.useEffect(() => {\n    const checkEmail = async () => {\n      if (watchedEmail && watchedEmail.includes('@')) {\n        try {\n          const available = await checkEmailAvailability(watchedEmail);\n          setEmailAvailable(available);\n        } catch (error) {\n          setEmailAvailable(null);\n        }\n      } else {\n        setEmailAvailable(null);\n      }\n    };\n\n    const timeoutId = setTimeout(checkEmail, 500);\n    return () => clearTimeout(timeoutId);\n  }, [watchedEmail, checkEmailAvailability]);\n\n  const onSubmit = async (data: RegistrationForm) => {\n    if (emailAvailable === false) {\n      toast.error('Email is already registered');\n      return;\n    }\n\n    setIsLoading(true);\n    setIsGeneratingKeys(true);\n\n    try {\n      // Show key generation progress\n      toast.loading('Generating cryptographic keys...', { id: 'keygen' });\n\n      // Generate ECC key pair\n      const keyPair = await cryptoService.generateKeyPair();\n\n      toast.success('Keys generated successfully!', { id: 'keygen' });\n      toast.loading('Registering account...', { id: 'register' });\n\n      // Register user with public key\n      const success = await registerUser(data.email, data.name);\n\n      if (success) {\n        toast.success('Registration successful!', { id: 'register' });\n        toast.success('Your private key has been saved securely. Please keep it safe!', {\n          duration: 6000,\n        });\n        navigate('/login');\n      } else {\n        toast.error('Registration failed. Please try again.', { id: 'register' });\n      }\n    } catch (error) {\n      console.error('Registration error:', error);\n      toast.error('Registration failed. Please try again.', { id: 'register' });\n      toast.error('Key generation failed. Please try again.', { id: 'keygen' });\n    } finally {\n      setIsLoading(false);\n      setIsGeneratingKeys(false);\n    }\n  };\n\n  return (\n    <div className=\"auth-container\">\n      <div className=\"auth-card\">\n        <h1 className=\"auth-title\">Create Account</h1>\n        <p className=\"auth-subtitle\">\n          Register with ECC-based passwordless authentication\n        </p>\n\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div className=\"form-group\">\n            <label htmlFor=\"email\" className=\"form-label\">\n              Email Address\n            </label>\n            <input\n              id=\"email\"\n              type=\"email\"\n              className={`form-input ${errors.email ? 'error' : ''}`}\n              placeholder=\"Enter your email\"\n              {...register('email')}\n            />\n            {errors.email && <span className=\"error-message\">{errors.email.message}</span>}\n            {emailAvailable === true && (\n              <span className=\"success-message\">✓ Email is available</span>\n            )}\n            {emailAvailable === false && (\n              <span className=\"error-message\">✗ Email is already registered</span>\n            )}\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"name\" className=\"form-label\">\n              Full Name\n            </label>\n            <input\n              id=\"name\"\n              type=\"text\"\n              className={`form-input ${errors.name ? 'error' : ''}`}\n              placeholder=\"Enter your full name\"\n              {...register('name')}\n            />\n            {errors.name && <span className=\"error-message\">{errors.name.message}</span>}\n          </div>\n\n          <button\n            type=\"submit\"\n            className=\"btn btn-primary\"\n            disabled={isLoading || emailAvailable === false}\n          >\n            {isLoading ? (\n              <>\n                <span className=\"loading-spinner\"></span>\n                {isGeneratingKeys ? 'Generating Keys...' : 'Creating Account...'}\n              </>\n            ) : (\n              'Create Account'\n            )}\n          </button>\n        </form>\n\n        <div className=\"auth-footer\">\n          Already have an account?{' '}\n          <Link to=\"/login\" className=\"auth-link\">\n            Sign in\n          </Link>\n        </div>\n\n        <div className=\"security-info\">\n          <h3>How it works:</h3>\n          <ul>\n            <li>✓ Your device generates a unique cryptographic key pair</li>\n            <li>✓ Only the public key is sent to our servers</li>\n            <li>✓ Your private key stays secure on your device</li>\n            <li>✓ No passwords to remember or manage</li>\n          </ul>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Registration; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}